# -*- coding: utf-8 -*-
# Generated by Django 1.10.8 on 2019-01-08 05:40
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import systems.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AdvisoryData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(blank=True, max_length=15)),
                ('advisory', models.TextField(blank=True)),
                ('title', models.TextField(blank=True)),
                ('severity', models.FloatField(blank=True)),
                ('references', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'advisory_data',
            },
        ),
        migrations.CreateModel(
            name='Allocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['name'],
                'db_table': 'allocations',
            },
        ),
        migrations.CreateModel(
            name='Contract',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('contract_number', models.CharField(blank=True, max_length=255)),
                ('support_level', models.CharField(blank=True, max_length=255)),
                ('contract_link', models.CharField(blank=True, max_length=255)),
                ('phone', models.CharField(blank=True, max_length=40)),
                ('expiration', models.DateTimeField(blank=True, null=True)),
                ('created_on', models.DateTimeField(blank=True, null=True)),
                ('updated_on', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'contracts',
            },
        ),
        migrations.CreateModel(
            name='KeyValue',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('key', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'key_value',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, unique=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('note', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['name'],
                'db_table': 'locations',
            },
        ),
        migrations.CreateModel(
            name='Mac',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mac', models.CharField(max_length=17, unique=True)),
            ],
            options={
                'db_table': 'macs',
            },
        ),
        migrations.CreateModel(
            name='NetworkAdapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mac_address', models.CharField(max_length=255)),
                ('ip_address', models.CharField(max_length=255)),
                ('adapter_name', models.CharField(max_length=255)),
                ('system_id', models.CharField(max_length=255)),
                ('switch_port', models.CharField(max_length=128)),
                ('filename', models.CharField(max_length=64)),
                ('option_host_name', models.CharField(max_length=64)),
                ('option_domain_name', models.CharField(max_length=128)),
                ('switch_id', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'network_adapters',
            },
        ),
        migrations.CreateModel(
            name='OperatingSystem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255)),
                ('version', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'ordering': ['name', 'version'],
                'db_table': 'operating_systems',
            },
        ),
        migrations.CreateModel(
            name='PortData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.CharField(blank=True, max_length=15)),
                ('port', models.IntegerField(blank=True)),
                ('protocol', models.CharField(blank=True, max_length=3)),
                ('state', models.CharField(blank=True, max_length=13)),
                ('service', models.CharField(blank=True, max_length=64)),
                ('version', models.CharField(blank=True, max_length=128)),
            ],
            options={
                'db_table': 'port_data',
            },
        ),
        migrations.CreateModel(
            name='ScheduledTask',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.CharField(max_length=255, unique=True)),
                ('type', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ['task'],
                'db_table': 'scheduled_tasks',
            },
        ),
        migrations.CreateModel(
            name='ServerModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vendor', models.CharField(blank=True, max_length=255)),
                ('model', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('part_number', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'ordering': ['vendor', 'model'],
                'db_table': 'server_models',
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('full_name', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, validators=[systems.models.validate_site_name])),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systems.Site')),
            ],
            options={
                'db_table': 'site',
            },
        ),
        migrations.CreateModel(
            name='System',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=255, unique=True, validators=[systems.models.validate_name])),
                ('serial', models.CharField(blank=True, max_length=255, null=True)),
                ('pdu1', models.CharField(blank=True, max_length=255, null=True)),
                ('pdu2', models.CharField(blank=True, max_length=255, null=True)),
                ('created_on', models.DateTimeField(blank=True, null=True)),
                ('updated_on', models.DateTimeField(blank=True, null=True)),
                ('oob_ip', models.CharField(blank=True, max_length=30, null=True)),
                ('asset_tag', models.CharField(blank=True, max_length=255, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('licenses', models.TextField(blank=True, null=True)),
                ('rack_order', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('switch_ports', models.CharField(blank=True, max_length=255, null=True)),
                ('patch_panel_port', models.CharField(blank=True, max_length=255, null=True)),
                ('oob_switch_port', models.CharField(blank=True, max_length=255, null=True)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('purchase_price', models.CharField(blank=True, max_length=255, null=True)),
                ('change_password', models.DateTimeField(blank=True, null=True)),
                ('ram', models.CharField(blank=True, max_length=255, null=True)),
                ('is_dhcp_server', models.IntegerField(blank=True, choices=[(0, b'No'), (1, b'Yes')], null=True)),
                ('is_dns_server', models.IntegerField(blank=True, choices=[(0, b'No'), (1, b'Yes')], null=True)),
                ('is_puppet_server', models.IntegerField(blank=True, choices=[(0, b'No'), (1, b'Yes')], null=True)),
                ('is_nagios_server', models.IntegerField(blank=True, choices=[(0, b'No'), (1, b'Yes')], null=True)),
                ('is_switch', models.IntegerField(blank=True, choices=[(0, b'No'), (1, b'Yes')], null=True)),
                ('warranty_start', models.DateField(blank=True, default=None, null=True)),
                ('warranty_end', models.DateField(blank=True, default=None, null=True)),
                ('allocation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systems.Allocation')),
                ('operating_system', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systems.OperatingSystem')),
                ('server_model', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systems.ServerModel')),
            ],
            options={
                'db_table': 'systems',
            },
            bases=(systems.models.Refresher, systems.models.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='SystemChangeLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('changed_by', models.CharField(max_length=255)),
                ('changed_date', models.DateTimeField()),
                ('changed_text', models.TextField()),
                ('system', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='systems.System')),
            ],
            options={
                'db_table': 'systems_change_log',
            },
        ),
        migrations.CreateModel(
            name='SystemRack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='systems.Location')),
                ('site', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='systems.Site')),
            ],
            options={
                'ordering': ['name'],
                'db_table': 'system_racks',
            },
        ),
        migrations.CreateModel(
            name='SystemStatus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(blank=True, max_length=255)),
                ('color', models.CharField(blank=True, max_length=255)),
                ('color_code', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'ordering': ['status'],
                'db_table': 'system_statuses',
            },
        ),
        migrations.CreateModel(
            name='SystemType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_name', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'db_table': 'system_types',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_desktop_oncall', models.BooleanField()),
                ('is_sysadmin_oncall', models.BooleanField()),
                ('is_services_oncall', models.BooleanField()),
                ('is_mysqldba_oncall', models.BooleanField()),
                ('is_pgsqldba_oncall', models.BooleanField()),
                ('is_netop_oncall', models.BooleanField()),
                ('is_metrics_oncall', models.BooleanField()),
                ('current_desktop_oncall', models.BooleanField()),
                ('current_sysadmin_oncall', models.BooleanField()),
                ('current_services_oncall', models.BooleanField()),
                ('current_mysqldba_oncall', models.BooleanField()),
                ('current_pgsqldba_oncall', models.BooleanField()),
                ('current_netop_oncall', models.BooleanField()),
                ('current_metrics_oncall', models.BooleanField()),
                ('irc_nick', models.CharField(blank=True, max_length=128, null=True)),
                ('api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('pager_type', models.CharField(blank=True, choices=[(b'epager', b'epager'), (b'sms', b'sms')], max_length=255, null=True)),
                ('pager_number', models.CharField(blank=True, max_length=255, null=True)),
                ('epager_address', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, unique=True)),
            ],
            options={
                'db_table': 'user_profiles',
            },
        ),
        migrations.AddField(
            model_name='system',
            name='system_rack',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systems.SystemRack'),
        ),
        migrations.AddField(
            model_name='system',
            name='system_status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systems.SystemStatus'),
        ),
        migrations.AddField(
            model_name='system',
            name='system_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='systems.SystemType'),
        ),
        migrations.AddField(
            model_name='mac',
            name='system',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='systems.System'),
        ),
        migrations.AddField(
            model_name='keyvalue',
            name='obj',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='systems.System'),
        ),
        migrations.AddField(
            model_name='contract',
            name='system',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='systems.System'),
        ),
        migrations.AlterUniqueTogether(
            name='site',
            unique_together=set([('full_name',)]),
        ),
    ]
